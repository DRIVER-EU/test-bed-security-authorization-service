<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ow2.authzforce</groupId>
		<artifactId>authzforce-ce-parent</artifactId>
		<version>7.4.0</version>
	</parent>
	<groupId>eu.driver</groupId>
	<artifactId>driver-testbed-sec-authz-service</artifactId>
	<name>${project.groupId}:${project.artifactId}</name>
	<description>DRIVER+ Testbed Security Service for Authorization (policy administration and decision, aka PAP and PDP in XACML standard)</description>
	<version>1.1.0</version>
	<url>http://www.driver-project.eu/</url>
	<developers>
		<developer>
			<name>Cyril Dangerville</name>
			<email>http://scr.im/cdan</email>
			<organization>Thales Services</organization>
			<organizationUrl>http://thalesgroup.com</organizationUrl>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:https://github.com/DRIVER-EU/test-bed-security-authorization-service.git</connection>
		<developerConnection>scm:git:https://github.com/DRIVER-EU/test-bed-security-authorization-service.git</developerConnection>
		<tag>HEAD</tag>
		<!-- Publicly browsable repository URL. For example, via Gitlab web UI. -->
		<url>https://github.com/DRIVER-EU/test-bed-security-authorization-service</url>
	</scm>
	<properties>
		<!-- Fix for CVE-2018-8014 -->
		<spring.boot.version>1.5.14.RELEASE</spring.boot.version>
		<docker.image.prefix>drivereu</docker.image.prefix>
		<github.global.server>github</github.global.server>
		<!-- Remove spring.version after update authzforce-ce-parent to 7.5.0 -->
		<spring.version>4.3.18.RELEASE</spring.version>
	</properties>
	<repositories>
		<repository>
			<!-- Required by owasp dependency-check plugin for find info (POM) about dependency org.everit.json.schema in child modules -->
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<!-- Replaced by jcl-over-slf4j dependency for redirecting logs to slf4j, see http://www.slf4j.org/legacy.html -->
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<!-- Replaced by jcl-over-slf4j dependency for redirecting logs to slf4j, see http://www.slf4j.org/legacy.html -->
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.23</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-features-logging</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
			<version>${cxf.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.ow2.authzforce</groupId>
			<artifactId>authzforce-ce-restful-pdp-jaxrs</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.version}</version>
			<scope>test</scope>
			<!-- jsonassert depends on com.vaadin.external.google:android-json whose classes conflict with org.json:json; same issue with json-path -->
			<exclusions>
				<exclusion>
					<groupId>org.skyscreamer</groupId>
					<artifactId>jsonassert</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.jayway.jsonpath</groupId>
					<artifactId>json-path</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.name} ${project.version}</message>
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<branch>refs/heads/master</branch>
					<includes>
						<include>**/*</include>
					</includes>
					<merge>true</merge>
					<repositoryName>maven-repo</repositoryName>
					<repositoryOwner>DRIVER-EU</repositoryOwner>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<configuration>
					<cveValidForHours>24</cveValidForHours>
					<!-- The plugin has numerous issues with version matching, which triggers false positives so we need a "suppresion" file for those. More info: https://github.com/jeremylong/DependencyCheck/issues -->
					<suppressionFile>owasp-dependency-check-suppression.xml</suppressionFile>
					<failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<!-- target JDK already set by parent project's maven.compiler.target property -->
				<configuration>
					<verbose>true</verbose>
					<excludeRoots>
						<excludeRoot>target/generated-sources/xjc</excludeRoot>
						<excludeRoot>target/generated-test-sources/xjc</excludeRoot>
					</excludeRoots>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<onlyAnalyze>eu.driver.*</onlyAnalyze>
					<excludeFilterFile>findbugs-exclude-filter.xml</excludeFilterFile>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Override license-maven-plugin configuration to exclude Sunxacml files from adding GPL license headers (different license) -->
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<configuration>
					<header>LICENSE_HEADER.txt</header>
					<includes>
						<include>src/main/java/eu/driver/**</include>
						<!-- Include test files also -->
						<include>src/test/java/eu/driver/**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>format-sources-license</id>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
					<execution>
						<id>format-test-sources-license</id>
						<phase>process-test-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- This execution of surefire is overwritten by a default one unless we specify a different version in pluginManagement. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- <suiteXmlFiles> -->
					<!-- Parameters in the XML files seem to be ignored (more info: http://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html) -->
					<!-- Using multiple test suites simplifies debugging and prevent some TestNG issues happening when reusing same class/methods over multiple tests in same test suite -->
					<!-- <suiteXmlFile>src/test/suite.xml</suiteXmlFile> -->
					<!-- </suiteXmlFiles> -->
					<skipAfterFailureCount>1</skipAfterFailureCount>
					<!-- redirectTestOutputToFile: set this to 'true' to redirect the unit test standard output to a file (found in reportsDirectory/testName-output.txt) -->
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
					<systemPropertyVariables>
						<javax.xml.accessExternalSchema>all</javax.xml.accessExternalSchema>
					</systemPropertyVariables>
					<properties>
						<property>
							<name>surefire.testng.verbose</name>
							<!-- verbosity level from 0 to 10 (10 is the most detailed), or -1 for debug More info: http://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html -->
							<value>2</value>
						</property>
					</properties>
				</configuration>
				<executions>
					<execution>
						<id>without-ssl</id>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<spring.profiles.active>default</spring.profiles.active>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>with-ssl</id>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<spring.profiles.active>ssl</spring.profiles.active>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.3.6.RELEASE</version>
				<configuration>
					<executable>true</executable>
					<layout>ZIP</layout>
					<!-- <embeddedLaunchScriptProperties> -->
					<!-- <inlinedConfScript>src/setenv.sh</inlinedConfScript> -->
					<!-- </embeddedLaunchScriptProperties> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.3.6</version>
				<configuration>
					<!-- <dockerDirectory>dockAer</dockerDirectory> -->
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<forceTags>true</forceTags>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>